# vim: set ft=zsh foldmethod=marker autoindent expandtab shiftwidth=4 :

## 关于历史纪录的配置 {{{
# 历史纪录条目数量
export HISTSIZE=10000
# 注销后保存的历史纪录条目数量
export SAVEHIST=10000
# 历史纪录文件
#export HISTFILE=~/.zhistory
# 以附加的方式写入历史纪录
setopt INC_APPEND_HISTORY
# 如果连续输入的命令相同，历史纪录中只保留一个
setopt HIST_IGNORE_DUPS
# 为历史纪录中的命令添加时间戳
setopt EXTENDED_HISTORY
# 在命令前添加空格，不将此命令添加到纪录文件中
setopt HIST_IGNORE_SPACE

# 启用 cd 命令的历史纪录，cd -[TAB]进入历史路径
setopt AUTO_PUSHD
# 相同的历史路径只保留一个
setopt PUSHD_IGNORE_DUPS
## }}}

## 杂项 {{{
# Don't ask me 'do you wish to see all XX possibilities' before menu selection
LISTPROMPT=''
# 允许在交互模式中使用注释  例如：cmd #这是注释
setopt INTERACTIVE_COMMENTS
# 禁用 core dumps
limit coredumpsize 0
# 单词分界  去掉了 '.' '/'
WORDCHARS='*?_-[]~=&;!#$%^(){}<>'
# Show the default prompt while scrolling during menu selection
MENUPROMPT=
setopt LIST_ROWS_FIRST LIST_PACKED
#
setopt longlistjobs
## }}}

## 256 Colors Term {{{
if [[ -n $COLORTERM ]]; then
    case $TERM in
        xterm)
        export TERM="xterm-256color"
        ;;
        screen)
        export TERM="screen-256color"
        ;;
        *)
        ;;
    esac
fi
## }}}

## 动态 Title {{{
function title {
    if [[ $TERM == "screen" || $TERM == "screen.linux" || $TERM == "screen-256color" ]]; then
        # Use these two for GNU Screen:
        print -nR $'\033k'$1$'\033'\\\

        print -nR $'\033]0;'$2$'\a'
    elif [[ $TERM == "xterm" || $TERM == "urxvt" ]]; then
        # Use this one instead for XTerms:
        print -nR $'\033]0;'$*$'\a'
        #trap 'echo -ne "\e]0;$USER@$HOSTNAME: $BASH_COMMAND\007"' DEBUG
    fi
}

# Set screen title if not connected remotely
function precmd {
    local dir; dir=$(print -Pn "%~")
    local odir

    # 自动压缩目录名到小于 20 个字符
    while (( ${#dir} > 20 )) && [[ $dir != $odir ]]; do
      odir=$dir
      dir=$(echo $dir | sed "s:\([~/][^/]\)[^/]\+:\1:")
    done

    title "$dir" "$TERM $PWD"
    echo -ne '\033[?17;0;127c'
}

function preexec {
    emulate -L zsh
    local -a cmd; cmd=(${(z)1})
    if [[ $cmd[1]:t == "ssh" ]]; then
        title "@"$cmd[2] "$TERM $cmd"
    elif [[ $cmd[1]:t == "sudo" ]]; then
        title "#"$cmd[2]:t "$TERM $cmd[3,-1]"
    elif [[ $cmd[1]:t == "for" ]]; then
        title "()"$cmd[7] "$TERM $cmd"
    elif [[ $cmd[1]:t == "svn" ]] || [[ $cmd[1]:t == "git" ]]; then
        title "$cmd[1,2]" "$TERM $cmd"
    else
        title $cmd[1]:t "$TERM $cmd[2,-1]"
    fi
}
## }}}

## Alias for nocorrect{{{
alias mv='nocorrect mv -i'
alias cp='nocorrect cp -i'
alias rm='nocorrect rm -i'
## }}}

## source {{{
# alias
source ~/.alias
# 读入提示符的设置
source ~/.zsh/prompt
# 读入 bindkey 设置
source ~/.zsh/bindkey
# 读入 complete 设置
source ~/.zsh/complete
# 读入一些乱七八糟的设置
source ~/.zsh/misc
# 读入一些临时的设置
[[ -r ~/.zshrc_temp ]] && source ~/.zshrc_temp
## }}}
