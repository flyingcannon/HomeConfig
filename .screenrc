#attrcolor b ".I" # Use bright colors for bold text.
startup_message off

# use zsh
shell zsh

## terminfo and termcap for nice 256 color terminal
#termcapinfo xterm*|rxvt-* 'Co#256:AB=\E[48;5;%dm:AF=\E[38;5;%dm'
#termcapinfo xterm*|rxvt-* 'hs:ts=\E]0;:fs=\007:ds=\E]0;\007'
#termcapinfo xterm*|rxvt-* ti@:te=\E[3J
#termcapinfo xterm*|rxvt-* hs@:cs=\E[%i%d;%dr:im=\E[4h:ei=\E[4l
#termcapinfo xterm*|rxvt-* hs@:cs=\E[%i%p1%d;%p2%dr:im=\E[4h:ei=\E[4l
#
# erase background with current bg color
defbce "off"
# disable Ctrl-S/Ctrl-Q "flow control"
defflow off
# get rid of the content leaved by a quited vim
altscreen on

# increase scrollback, default is 100.
defscrollback 10000

caption always '%{wb} %-w%{= BW}%50>%n %t%{-}%+w %<'
# ------------------------------------------------------------------------------
# caption description:
# ------------------------------------------------------------------------------
#
# caption always "%?%F%{-b bc}%:%{-b bb}%?%C|%D|%M %d|%H%?%F%{+u wb}%? %L=%-Lw%45>%{+b by}%n%f* %t%{-}%+Lw%-0<"
#
# Anything I don't describe is treated literally.
#
# %?          - Start of a conditional statement.
#  %F         - Use this part of the statement if the window has focus (i.e. it
#               is the only window or the currently active one).
#  %{-b bc}   - Turn off bold, blue foreground, cyan background.
# %:          - else
#  %{-b bb}   - Turn off bold, blue foreground, blue background (this obscures
#               the text on non-focused windows and just gives a blue line).
# %?          - End conditional statement.
#  %C         - time (hh:mm, leading space) in 12 hour format
#  %D         - Three-letter day-of-week appreviation
#  %M         - Three-letter month appreviation
#  %d         - Day of the month
#  %H         - hostname
#  %?         - Start of conditional statement.
#   %F        - Use this part of the statement if the window has focus.
#   %{+u wb}  - underlined, white foreground, blue background
#  %?         - End conditional (if not focused, text remaind blue on blue).
#    %L=      - truncation/padding point.  With the 'L' qualifier, basically
#               just acts as a reference point.  Further truncation/padding is
#               done relative to here, not the beginning of the string
#    %-Lw     - window list up to but not including the current window (-),
#               show window flags (L)
#    %45>     - truncation/padding marker; place this point about 45% of the
#               way into the display area (45)
#    %{+b by} - add bold (still underlined from before), blue foreground,
#               yellow background
#      %n     - number of the current window
#      %f     - flags for current window
#      %t     - title of current window
#    %{-}     - undo last color change (so now we're back to underlined white
#               on blue)  (technically, this is a pop; a second invocation
#               would drop things back to unadorned blue on cyan)
#    %+Lw     - window list from the next window on (-), show window flags (L)
#    %-0<     - truncation/padding point.  Place this point zero spaces (0)
#               from the right margin (-).

# 使用 `(1左邊那個按鍵)取代 ctrl＋A，如果要輸入 `，點兩下 ` 即可。
escape ``

# Evil evil keybindings. Do Not Want!
bind ^\
bind \\
bind ^h
bind h
bind ^Q
bind q
bind ^S
bind s

# my keybindings
bind h prev # prev tab
bind l next # next tab
bind ' ' other

# Window numbering starts at 1, not 0.
bind c screen 1
bind 0 select 10
screen 1
# Using tab to move around regions gets annoying. These help.
bind j focus down
bind k focus up
